local PS = game:GetService("Players")
local RS = game:GetService('ReplicatedStorage')

for _, object in pairs(RS:GetDescendants()) do
    if not RS:FindFirstChild("ACS_Engine") then
        print("RemoteEvent '" .. object.Name .. "' not found!")
        return
    end
end
function Change_All_Value(type, num)
	for _, obj in pairs(game:GetDescendants()) do
		if obj:IsA(type) then
			setValue(obj, num)
		end
	 end
end

function setValue(ValueObj, NewValue)
	RS['ACS_Engine'].Events.Refil:FireServer(ValueObj, NewValue)
end
local VALUE_LIST = {'StringValue', 'NumberValue', 'IntValue', 'ObjectValue', 'BoolValue', 'BrickColorValue', 'Vector3Value', 'CFrameValue', 'Color3Value'}
local FUCKING_NIL = math.huge * math.huge

local VERSION = "v1.0"

local github = 'https://raw.githubusercontent.com/'
local repoName = 'system32unknown'
local repo = github..repoName..'/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo..'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo..'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo..'addons/SaveManager.lua'))()

local num = 0
local typed_val = ''
local isnil = false

if _G.loaded then
	print("already loaded you dumb")
	return
end
_G.loaded = true

local Window = Library:CreateWindow({Title = '[FE] ACS Exploit by White Site Members ' .. VERSION, Center = true, AutoShow = true}) do
	local Tabs = {Main = Window:AddTab('Main'), ['UI Settings'] = Window:AddTab('UI Settings')} do
		local Tab = Tabs.Main:AddLeftTabbox('Main') do
	    	local MainTab = Tab:AddTab('Main') do
                MainTab:AddButton({Text = "Change Value", Callback = function()
					Change_All_Value(typed_val, (isnil and FUCKING_NIL or num))
                end})

	    	    MainTab:AddInput('ObjNumValue', {Numeric = true, Finished = false, Text = 'Object Num Value', Placeholder = 'Number', Callback = function(Value)
					if tonumber(Value) then
	    	        	num = tonumber(Value)
					else num = Value end
	    	    end})

				MainTab:AddDropdown("Dropdown Type", {Values = VALUE_LIST, Callback = function(String)
					typed_val = String
				end})

				MainTab:AddLabel('Color'):AddColorPicker('ValueColorPicker', {
					Default = Color3.new(0, 1, 0), -- Bright green
					Callback = function(Value)
						Change_All_Value('Color3Value', Value)
					end
				})

				MainTab:AddToggle('IsNil', {Text = 'Is Nil', Callback = function(Value)
	    	        isnil = Value
	    	    end})

				MainTab:AddToggle('ObjBoolValue', {Text = 'bj Bool Value', Callback = function(Value)
	    	        Change_All_Value('BoolValue', Value)
	    	    end})
	    	end
        end

		Library:OnUnload(function()
		    Library.Unloaded = true
            _G.loaded = false
		end)

		-- UI Settings
		local MenuGroup = Tabs['UI Settings']:AddLeftTabbox('Menu')

		local lol = MenuGroup:AddTab("Menu")
		lol:AddButton('Unload', function() Library:Unload() end)
		lol:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', {Default = 'End', NoUI = true, Text = 'Menu keybind'}) 

		Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

		ThemeManager:SetLibrary(Library)
		SaveManager:SetLibrary(Library)

		SaveManager:IgnoreThemeSettings()
		SaveManager:SetIgnoreIndexes({'MenuKeybind'})

		ThemeManager:SetFolder('MyScriptHub')
		SaveManager:SetFolder('MyScriptHub/specific-game')

		SaveManager:BuildConfigSection(Tabs['UI Settings'])
		ThemeManager:ApplyToTab(Tabs['UI Settings'])
	end
end

Library:Notify('Script fully loaded!')
Library:Notify('Press '.. Library.ToggleKeybind.Value ..' to toggle the menu!')